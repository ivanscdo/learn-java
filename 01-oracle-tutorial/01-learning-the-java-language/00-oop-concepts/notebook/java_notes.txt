Objects have state and behavior
State refers to its current state
State stored in fields (variables)
Behavior is what it can do
exposed through methods (functions)
Data Encapsulation - hiding internal state and requiring all interaction to be performed through an object’s methods. 


“Instance of a class of objects known as _”
Class is an instance of a particular object, it is built from and is an iteration of a blueprint of that object. 

-----------
--Gotchas--
-----------

import statement
used in class importing other class; using an instance of the class of bikes
import <package_name>.<class_name>

package statement
used in original class from which the instance is created
package <package_name>
package name must also be the name of the enclosing directory of the class
src/<package_name>/<class>.java



------------------------
--What is Inheritance?--
------------------------

classes inherit commonly used state and behavior from other classes
superclass is the class from which you are inheriting 
subclass is the class which is inheriting
each class is allowed only one direct superclass
each subclass has the potential for unlimited number of subclasses

syntax:
class <subclass> extends <superclass> {
	new fields and methods defining <subclass> go here
}

---

when compiling from the src directory, the main app should be in the src directory, not a subdirectory within the src directory
for example, this is correct: ./src/<main_class>
this is not: ./src/<subdirectory>/<main_class>


----

methods are the way an object interfaces with the outside world. 
in most common form, interface is a group of methods with empty bodies

